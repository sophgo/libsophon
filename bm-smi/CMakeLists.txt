cmake_minimum_required(VERSION 2.8)
cmake_policy(SET CMP0046 NEW)
cmake_policy(SET CMP0048 NEW)

set(TARGET_NAME "bm-smi")
# set(CMAKE_VERBOSE_MAKEFILE ON)

project(${TARGET_NAME} C CXX)

if(WIN32)
    include(windows.cmake)
else()
    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../bmlib/include)
    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../bmlib/src)


    link_directories(${LIB_DIR}/lib/)
    include_directories(${LIB_DIR}/include)
    add_definitions(-DSOC_MODE=1)

    SET(SRCS
        src/bm-smi.cpp
        src/bm_smi_cmdline.cpp
        src/bm_smi_test.cpp
        src/bm_smi_creator.cpp
        src/bm_smi_display.cpp
        src/bm_smi_ecc.cpp
        src/bm_smi_led.cpp
        src/bm_smi_recovery.cpp
        src/bm_smi_display_memory_detail.cpp
        src/bm_smi_display_util_detail.cpp
    )

    add_executable(${TARGET_NAME} ${SRCS})

    if("${PLATFORM}" STREQUAL "soc")
        add_definitions(-DSOC_MODE=1)
        target_link_libraries(${TARGET_NAME} curses gflags_nothreads.a pthread bmlib dl -lrt)
    else()
        target_link_libraries(${TARGET_NAME} ${CURSES_LIBRARY} gflags_nothreads.a pthread bmlib)
    endif()

    install(TARGETS ${TARGET_NAME}
        RUNTIME DESTINATION bin
        COMPONENT libsophon)
endif()